cat << CTAG
{
		name:CPU,
			elements:[
					{ SPane:{
						title:"Scaling Frequencie:"
					}},
					{ SLiveLabel:{
						refresh:1000,
						action:"live CPU_CUR_Freq"
					}},
					{ STitleBar:{
						title:"Frequency Control"
					}},
					`if [ -f "/sys/kernel/msm_limiter/resume_max_freq" ]; then
						$BB echo '{ SSeekBar:{
							title:"CPU Max Frequency",
							description:"Set the maximum frequency the CPU scales up to.",
							default:'\`$BB cat /sys/kernel/msm_limiter/resume_max_freq\`',
							action:"generic /sys/kernel/msm_limiter/resume_max_freq",
							values:{'
								sh $DEVICE CPUFrequencyList
							$BB echo '}
						}},'
					fi`
					`if [ -f "/sys/kernel/msm_limiter/suspend_min_freq" ]; then
						$BB echo '{ SSeekBar:{
							title:"CPU0 Min Frequency",
							description:"Set the minimum frequency the CPU scales up to.",
							default:'\`$BB cat /sys/kernel/msm_limiter/suspend_min_freq\`',
							action:"generic /sys/kernel/msm_limiter/suspend_min_freq",
							values:{'
								sh $DEVICE CPUFrequencyList
							$BB echo '}
						}},'
					fi`
					`if [ -f "/sys/kernel/msm_limiter/suspend_max_freq" ]; then
						$BB echo '{ SSeekBar:{
							title:"CPU Suspend Max Frequency",
							description:"Set the maximum frequency the CPU scales up to on suspend.",
							default:'\`$BB cat /sys/kernel/msm_limiter/suspend_max_freq\`',
							action:"generic /sys/kernel/msm_limiter/suspend_max_freq",
							values:{'
								sh $DEVICE CPUFrequencyList
							$BB echo '}
						}},'
					fi`
					`if [ -f "/sys/module/cpu_boost/parameters/input_boost_ms" ]; then
					SYNCT=\`$BB cat /sys/module/cpu_boost/parameters/input_boost_ms\`
						$BB echo '{ SSeekBar:{
								title:"Input Boost Duration",
								description:"Sets period for which idle CPU is boosted whenever there are incoming input/hotplug/wakeup_boost events. Keep this higher enough to get smoother experience on your rocking device.",
								unit:" ms",
								min:0,
								max:5000,
								step:10,
								default:'$SYNCT',
								action:"generic /sys/module/cpu_boost/parameters/input_boost_ms"
						}},'
					fi
					if [ -f "/sys/module/cpu_boost/parameters/input_boost_freq" ]; then
					VALUE=0; for i in \`$BB cat /sys/module/cpu_boost/parameters/input_boost_freq\`; do VALUE=$(($VALUE+1)); done;
						if [ $VALUE -eq 1 ]; then
							IBF=\`$BB cat /sys/module/cpu_boost/parameters/input_boost_freq\`
							
							$BB echo '{ SSeekBar:{
								title:"CPU Touch Boost",
								description:"Set the touch frequency when you touch screen.",
								default:'$IBF',
								action:"generic /sys/module/cpu_boost/parameters/input_boost_freq",
								values:{ 0:"Disabled", '
									sh $DEVICE CPUFrequencyList
								$BB echo '}
							}},'
						elif [ $VALUE -eq 4 ]; then
							$BB echo '{ SSeekBar:{
								title:"CPU0 输入优化频率",
								description:"当触摸屏幕或按建时，提升到优化的输入 CPU0 频率。",
								action:"cpuboostibf 0",
								values:{ 0:"Disabled", '
									sh $DEVICE CPUFrequencyList
								$BB echo '}
							}},
							{ SSeekBar:{
								title:"CPU1 输入优化频率",
								description:"当触摸屏幕或按建时，提升到优化的输入 CPU1 频率。",
								action:"cpuboostibf 1",
								values:{ 0:"Disabled", '
									sh $DEVICE CPUFrequencyList
								$BB echo '}
							}},
							{ SSeekBar:{
								title:"CPU2 输入优化频率",
								description:"当触摸屏幕或按建时，提升到优化的输入 CPU2 频率。",
								action:"cpuboostibf 2",
								values:{ 0:"Disabled", '
									sh $DEVICE CPUFrequencyList
								$BB echo '}
							}},
							{ SSeekBar:{
								title:"CPU3 输入优化频率",
								description:"当触摸屏幕或按建时，提升到优化的输入 CPU3 频率。",
								action:"cpuboostibf 3",
								values:{ 0:"Disabled", '
									sh $DEVICE CPUFrequencyList
								$BB echo '}
							}},'
						fi;
					fi;
				fi`
				`if [ -f "/sys/module/workqueue/parameters/power_efficient" ]; then
				PE=\`bool /sys/module/workqueue/parameters/power_efficient\`
					$BB echo '{ SPane:{
						title:"Power-efficient Workqueues",
					}},
						{ SCheckBox:{
							label:"Enable",
							description:"Power-efficient Workqueues help to reduce power consumption at the cost of slight performance decrease. By enabling this, PE Workqueues are used for unbound scheduled works to reduce the load on sibling CPU cores and queuing work only on CPU0.(JZ note: For all the kernel Workqueues)",
							default:'$PE',
							action:"boolean /sys/module/workqueue/parameters/power_efficient",
						}},'
				fi`
			{ SPane:{
				title:"CPU Governor",
				description:"The CPU governor determines how the respective CPU behaves in response to changes in workload. Changing the governor will impact how the CPU scales through the frequency steps available. WIKI: <a href='http://timos.me/tm/wiki/cpugovernors'>HERE</a>"
			}},
				`if [ -f "/sys/kernel/msm_limiter/scaling_governor" ]; then
					$BB echo '{ SOptionList:{
						title:"CPU Governor",
						default:'\`$BB cat /sys/kernel/msm_limiter/scaling_governor\`',
						action:"generic /sys/kernel/msm_limiter/scaling_governor",
						values:['
							sh $DEVICE CPUGovernorList
						$BB echo '],
					}},'
				fi`
			{ SPane:{
				title:"Governor tunables"
			}},
				{ STreeDescriptor:{
					path:"`sh $DEVICE DirCPUGovernorTree`",
					generic: {
						directory: {
							STreeDescriptor:{
								generic: {
									directory: {},
									element: {
										SGeneric: { title:"@BASENAME" }
									}
								},
								exclude: [ 
									"boost_duration", "boostpulse", "cpu_utilization", "multi_phase_freq_tbl", "profile",
									"up_threshold_h", "up_threshold_l", "version_profiles", "sampling_rate_current", "freq_limit",
									"music_state", "inputboost_punch_cycles", "inputboost_punch_freq", "inputboost_punch_on_epenmove",
									"inputboost_punch_on_fingerdown", "inputboost_punch_on_fingermove", "auto_adjust_freq_thresholds",
									"version", "early_demand", "fast_scaling_up", "fast_scaling_down", "fast_scaling_sleep_up", "fast_scaling_sleep_down"
									"scaling_up_block_freq", "scaling_block_freq", "inputboost_typingbooster_cores", "music_max_freq", "music_min_freq"
								]
							},
						}
					},
					exclude: [ "all_cpus", "kset", "overall_stats", "stats", "vdd_table" ]
				}},
		]
}
CTAG
